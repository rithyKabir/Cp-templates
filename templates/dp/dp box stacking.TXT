#include <bits/stdc++.h>
using namespace std;
int dp[10001][10001];
struct node{
        int x, y;
        node(int _x, int _y)
        {
            x = _x;
            y = _y;
        }
        node(){}

};
vector <node> v;
bool yes(node a, node b)
{
    if(a.x<b.x)
        return true;
    else if(a.x==b.x)
    {
        if(a.y<b.y)
            return true;
        else
            return false;
    }
    else
        return false;
}
int findAns(int i, int j)
{
    if(i==v.size()|| j == v.size())
        return 0;
    if(dp[i][j]!=-1)
        return dp[i][j];
    int ans1 = -1, ans2 = -1;
    if(v[i].x<=v[j].x && v[i].y<=v[j].y)
        ans1 = 1+ findAns(j,j+1);
    ans2 = findAns(i, j+1);
    return dp[i][j]=max(ans1,ans2);
}

int main()
{
    int n, x, y;
    while(cin>>n)
    {
        if(n==0)
            break;
        v.push_back(node(INT_MIN,INT_MIN));
        for(int i=0; i<n; i++)
        {
            cin>>x>>y;
            v.push_back(node(x,y));
        }
       for(int i=0; i<=n; i++)
        for(int j=0; j<=n; j++)
            dp[i][j]= -1;

       sort(v.begin(),v.end(),yes);
        cout<<findAns(0,1)<<endl;
        v.clear();
    }
    cout<<"*"<<endl;
}
