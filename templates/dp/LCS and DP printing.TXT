#include <bits/stdc++.h>
using namespace std;
string s1, s2,p1,p2;
int dp[102][102];
int LCS(int i, int j)
{
    if(i==s1.size()|| j == s2.size())
        return 0;
    if(dp[i][j]!=-1)
        return dp[i][j];
        long long ans1 = 0, ans2 = 0;
    if(s1[i]==s2[j])
        return dp[i][j]=1+ LCS(i+1,j+1);
 ans1 = LCS(i+1,j);
   ans2 = LCS(i,j+1);
    return dp[i][j]= max(ans1,ans2);
}
vector<int> v;
long long ind1, ind2;
void print(int i, int j)
{
    if(s1.size()==i || s2.size()==j)
    {
        while(ind1!=s1.size())
            p1.push_back(s1[ind1++]);
        while(ind2!=s2.size())
            p1.push_back(s2[ind2++]);
        cout<<p1<<endl;
           return;
    }

    if(s1[i]==s2[j])
    {
        while(ind1!=i)
        {
             p1.push_back(s1[ind1]);
             ind1++;

        }

        while(ind2!=j)
        {
                p1.push_back(s2[ind2]);
                ind2++;

        }

        p1.push_back(s2[ind2]);
        ind1++;
        ind2++;
         print(i+1,j+1);

    }
    else
        if(dp[i+1][j]>dp[i][j+1])
                print(i+1,j);
        else
            print(i,j+1);
}
int main()
{
    while(cin>>s1)
    {
        cin>>s2;
        memset(dp,-1,sizeof(dp));
        LCS(0,0);
        ind1 = 0; ind2 = 0;
        print(0,0);
        p1.clear();
    }
    return 0;
}
